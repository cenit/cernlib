#! /bin/sh /usr/share/dpatch/dpatch-run
## 115-rsrtnt64-goto-outer-block.dpatch by  <kmccarty@debian.org>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: Avoid weird jump assignments on g77/ia64 as well as with gfortran
## DP: to avoid breakage during linking step on Itanium.
## DP: Also, following Harald Vogt, change indicators of line continuation
## DP: from "1" -> "&" to be compatible with gfortran.

@DPATCH@
diff -urNad cernlib-2006.dfsg~/src/mathlib/gen/b/rsrtnt64.F cernlib-2006.dfsg/src/mathlib/gen/b/rsrtnt64.F
--- cernlib-2006.dfsg~/src/mathlib/gen/b/rsrtnt64.F	2006-09-15 05:34:52.000000000 -0400
+++ cernlib-2006.dfsg/src/mathlib/gen/b/rsrtnt64.F	2007-01-09 16:27:13.488797346 -0500
@@ -56,7 +56,7 @@
       IF(LLL) GO TO 9
 
       LLL=K .GE. 0 .OR. K .EQ. -1 .AND. U*V .NE. 0
-     1             .OR. K .LE. -2 .AND. U*V .GT. 0
+     &             .OR. K .LE. -2 .AND. U*V .GT. 0
       IF(.NOT.LLL) GO TO 9
 
       DELTA=4*A*C-B**2
@@ -120,7 +120,7 @@
         ENDIF
        ELSE
         IF(N .EQ. 1) THEN
-#if !defined(CERNLIB_GFORTRAN)
+#if (!defined(CERNLIB_GFORTRAN)) && !defined(__ia64__)
          ASSIGN 11 TO JMP1
          GO TO 10
 #else
@@ -141,7 +141,7 @@
           G2=A*C
           H3=G1-16*G2
           H=(((H1*V-H2)*V+H3)*RT(V)-((H1*U-H2)*U+H3)*RT(U)-
-     1       (HF*G1-18*G2)*B*H)/(24*C**3)
+     &       (HF*G1-18*G2)*B*H)/(24*C**3)
          ENDIF
         ELSE
          IF(DELTA .EQ. 0) THEN
@@ -181,7 +181,7 @@
            H=2*((H1+B*U)/RT(U)-(H1+B*V)/RT(V))/DELTA
            LB1=11
           ELSEIF(K .EQ. 2) THEN
-#if !defined(CERNLIB_GFORTRAN)
+#if (!defined(CERNLIB_GFORTRAN)) && !defined(__ia64__)
            ASSIGN 12 TO JMP1
            GO TO 10
 #else
@@ -191,7 +191,7 @@
            H2=2*A*B
            H=(((H1*U-H2)/RT(U)-(H1*V-H2)/RT(V))/DELTA+H)/C
           ELSEIF(K .EQ. 3) THEN
-#if !defined(CERNLIB_GFORTRAN)
+#if (!defined(CERNLIB_GFORTRAN)) && !defined(__ia64__)
            ASSIGN 13 TO JMP1
            GO TO 10
 #else
@@ -203,7 +203,7 @@
            H2=B*(10*G1-G2)
            H3=A*(8*G1-G2)
            H=(2*(((H1*V+H2)*V+H3)/RT(V)-((H1*U+H2)*U+H3)/RT(U))/
-     1       DELTA-3*B*H)/(2*C**2)
+     &       DELTA-3*B*H)/(2*C**2)
           ENDIF
          ENDIF
         ENDIF
@@ -232,7 +232,7 @@
         ENDIF
        ELSE
         IF(N .EQ. 1) THEN
-#if !defined(CERNLIB_GFORTRAN)
+#if (!defined(CERNLIB_GFORTRAN)) && !defined(__ia64__)
          ASSIGN 21 TO JMP2
          GO TO 20
 #else
@@ -246,7 +246,7 @@
           H1=6*B
           H2=4*A
           H=((H1*V-H2)*RT(V)/V**2-(H1*U-H2)*RT(U)/U**2+
-     1       (3*B**2-H2*C)*H)/(8*A**2)
+     &       (3*B**2-H2*C)*H)/(8*A**2)
          ENDIF
         ELSE
          IF(DELTA .EQ. 0) THEN
@@ -276,7 +276,7 @@
            IF(U. LT. -X0) H=-H
           ENDIF
          ELSE
-#if !defined(CERNLIB_GFORTRAN)
+#if (!defined(CERNLIB_GFORTRAN)) && !defined (__ia64__)
           ASSIGN 22 TO JMP2
           GO TO 20
 #else
@@ -293,7 +293,7 @@
            H2=(G1-10*G2)*B
            H3=A*DELTA
            H=(((H1*V+H2-H3/V)/RT(V)-(H1*U+H2-H3/U)/RT(U))/DELTA
-     1       -3*HF*B*H)/A**2
+     &       -3*HF*B*H)/A**2
           ELSEIF(K .EQ. -3) THEN
            G1=A*DELTA
            G2=A*C
@@ -304,19 +304,19 @@
            H3=(G4-62*G2)*G3+24*G2**2
            H4=B*C*(G4-52*G2)
            H=((((H2-H1/V)/V-H3-H4*V)/RT(V)-((H2-H1/U)/U-H3-H4*U)/RT(U))
-     1        /DELTA+HF*(G4-12*G2)*H)/(4*A**3)
+     &        /DELTA+HF*(G4-12*G2)*H)/(4*A**3)
           ENDIF
          ENDIF
         ENDIF
        ENDIF
       ENDIF
-#if !defined(CERNLIB_GFORTRAN)
+#if (!defined(CERNLIB_GFORTRAN)) && !defined(__ia64__)
       GO TO 9
 
    10 C2=2*C
       IF(DELTA .GT. 0 .OR. DELTA .LT. 0 .AND. C .GT. 0) THEN
        H=LOG(ABS((2*SQRT(C*P(V))+C2*V+B)/
-     1           (2*SQRT(C*P(U))+C2*U+B)))/SQRT(C)
+     &           (2*SQRT(C*P(U))+C2*U+B)))/SQRT(C)
       ELSEIF(DELTA .EQ. 0) THEN
        H=ABS(LOG(ABS((C2*V+B)/(C2*U+B))))/SQRT(C)
       ELSE
@@ -341,7 +341,7 @@
        A2=2*A
        IF(DELTA .GT. 0 .OR. DELTA .LT. 0 .AND. A .GT. 0) THEN
         H=LOG(ABS((-2*SQRT(A*P(V))+B*V+A2)*U/
-     1           ((-2*SQRT(A*P(U))+B*U+A2)*V)))/SQRT(A)
+     &           ((-2*SQRT(A*P(U))+B*U+A2)*V)))/SQRT(A)
        ELSEIF(DELTA .EQ. 0) THEN
         H=LOG(ABS((B*U+A2)*V/((B*V+A2)*U)))/SQRT(A)
         IF(U*V .GT. 0) H=SIGN(H,U)
